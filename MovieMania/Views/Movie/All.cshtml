@model AllMoviesQueryModel 

@{
    ViewBag.Title = "Movies"; 
} 

<h2 class="text-center">@ViewBag.Title</h2> 
<hr />

<form method="get"> 
    <div class="row"> 
        <div class="form-group col-md-3 d-flex justify-content-between"> 
            <div class="form-group"> 
                <label asp-for="Genre"></label> 
                <select asp-for="Genre" class="form-control">
                    <option value="">All</option> 
                    @foreach (var genre in Model.Genres) 
                    { 
                        <option value="@genre">@genre</option> 
                    } 
                </select>
            </div> 
        </div>
        
        <div class="form-group col-md-3"> 
            <label asp-for="SearchTerm"></label> 
            <input asp-for="SearchTerm" class="form-control" placeholder="..."> 
        </div> 
        
        <div class="form-group col-md-3"> 
            <div class="form-group"> 
                <label asp-for="Sorting"></label> 
                <select asp-for="Sorting" class="form-control"> 
                    <option value="0">Newest</option> 
                    <option value="1">Lowest price first</option>
                </select> 
            </div> 
        </div> 

        <div class="col-md-3"> 
            <div class="form-group mt-4 p-2"> 
                <input type="submit" value="Search" class="btn btn-primary" /> 
            </div> 
        </div> 
    </div> 
</form> 

@{ 
    var previousPage = Model.CurrentPage - 1; 
    
    if (previousPage < 1) 
    { 
        previousPage = 1;
    } 

    var maxPage = Math.Ceiling((double)Model.TotalMoviesCount / 
        Model.MoviesPerPage); 
} 

<div class="row mb-5"> 
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start"> 
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" 
        asp-controller="Movie"
        asp-action="All" 
        asp-route-currentPage="@previousPage" 
        asp-route-category="@Model.Genre" 
        asp-route-searchTerm="@Model.SearchTerm" 
        asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>

    @{ 
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Movies.Any(); 
    }
    
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end"> 
        <a class="btn btn-primary 
            @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
            asp-controller="Movie" 
            asp-action="All" 
            asp-route-currentPage="@(Model.CurrentPage + 1)"
            asp-route-category="@Model.Genre" 
            asp-route-searchTerm="@Model.SearchTerm" 
            asp-route-sorting="@((int)Model.Sorting)">>>
        </a>
    </div> 
</div> 

@if (!Model.Movies.Any()) 
{ 
    <h2 class="text-center">No movies found by the given criteria!</h2> 
} 

<div class="row"> 
    @foreach (var movie in Model.Movies) 
    { 
        <partial name="_MoviePartial" model="@movie" /> 
    } 
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            
            function updateCartCount() {
                $.ajax({
                    url: "@Url.Action("GetCartItemCount", "Cart")",
                    type: "GET",
                    success: function (response) {
                        if (response.success) {
                            $("#cartCount").text(response.count);
                        } else {
                            console.log(response.message);
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status === 401) {
                            console.log('Error:', xhr.status, xhr.statusText, xhr.responseText);
                        } else if (xhr.status === 404) {
                            console.log('Error:', xhr.status, xhr.statusText, xhr.responseText);
                        } else {
                            console.log('Error:', xhr.status, xhr.statusText, xhr.responseText);
                            console.log("An unexpected error occurred while fetching cart count.");
                        }
                    }
                });
            }

            $('.add-to-cart').on('click', function (e) {
                e.preventDefault();

                const data = {
                    Id: $(this).data('id'),
                }

                const movieTitle = $(this).data('title')

                $.ajax({
                    url: "@Url.Action("AddToCart", "Cart")",
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    headers: {
                        'RequestVerificationToken': $('input[id="RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            toastr.success(`You have added ${movieTitle} to your cart!`);

                            updateCartCount();
                        } else {
                            toastr.error(response.message, 'Add To Cart Error');
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status === 401) {
                            var response = JSON.parse(xhr.responseText);
                            window.location.href = "/Identity/Account/Login?ReturnUrl=" + encodeURIComponent(window.location.pathname);

                            toastr.error(response.message, 'Add To Cart Error');
                        } else if (xhr.status === 404) {
                            var response = JSON.parse(xhr.responseText);

                            console.error('Error:', xhr.status, xhr.statusText, xhr.responseText);
                            toastr.error(response.message, 'Add To Cart Error');
                        } else {
                            console.error('Error:', xhr.status, xhr.statusText, xhr.responseText);
                            toastr.error('An unexpected error occurred while adding a movie to cart.', 'Add To Cart Error');
                        }
                    }
                });
            });
        });
    </script>
}