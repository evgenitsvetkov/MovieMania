@model CartServiceModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    ViewBag.Title = "Shopping Cart";
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<h1 class="text-center">@ViewBag.Title</h1>
<hr />

@if (!Model.CartItems.Any())
{
    <h2 class="text-center mt-5">Your cart is empty!</h2>
}
else
{       
    <div class="cart-container" style="display:inline">
        <div id="cart-items" class="row">
            @foreach (var item in Model.CartItems)
            {
                <div id="cart-item-@item.CartItemId" class="card col-3 border-0">
                    <div class="col-4">
                        <img class="card-img-top" style="width: 20rem; height: 25rem" src="@item.ImageUrl" alt="Item Image">
                    </div>
                    <p style="font-size:25px;"><u>@item.Title</u></p>
                    <div id="qty buttons" class="mb-2">
                        <span>Quantity:</span>
                        <button class="btn btn-sm btn-outline-primary increase-qty me-2 ms-2" data-id="@item.CartItemId">+</button>
                        <input class="quantity-input" type="number" min="1" max="24" value="@item.Quantity" step="1" readonly data-id="@item.CartItemId" style="display:none">
                        <span class="quantity-@item.CartItemId">@item.Quantity</span>
                        <button class="btn btn-sm btn-outline-secondary decrease-qty me-2 ms-2" data-id="@item.CartItemId">-</button>
                    </div>
                    <p>
                        Item Price:
                        <b class="itemPrice-@item.CartItemId">@String.Format("{0:f2}", item.ItemTotal) BGN</b>
                    </p>
                    <input id="__RequestVerificationToken" type="hidden" value="@requestToken" />
                    <button class="btn btn-danger remove-item" type="submit" data-id="@item.CartItemId" data-title="@item.Title">Remove Item</button>
                    <p></p>
                </div>
            }
        </div>
        <div id="cart-buttons">
            <div class="form-inline mb-3">
                <p><b class="cart-total-amount">Total Amount: @String.Format("{0:f2}", Model.TotalAmount) BGN</b></p>
                <form asp-action="ClearCart" method="post">
                    <input id="__RequestVerificationToken" type="hidden" value="@requestToken" />
                    <button class="btn btn-danger clear-cart" type="submit">Clear Cart</button>
                </form>
            </div>
            <div>
                <a class="btn btn-primary" asp-controller="Movie" asp-action="All">Back to movies</a>
                <a class="btn btn-primary" asp-controller="Order" asp-action="Checkout">Checkout</a>
            </div>
        </div>
    </div>
}

@section Scripts {
    @if (this.User.Identity.IsAuthenticated)
    {
        <script>
            $(document).ready(function () {
                CartModule.updateCartCount();

                $(".increase-qty, .decrease-qty").click(function (e) {
                    e.preventDefault();
                    CartModule.updateQuantity($(this).data('id'), $(this).hasClass("increase-qty"));
                });

                $('.remove-item').on('click', function (e) {
                    e.preventDefault();
                    CartModule.removeItem($(this).data('id'), $(this).data('title'));
                });

                $(".quantity-input").each(function () {
                    CartModule.updateButtons(this);
                });

                $(".increase-qty").click(function () {
                    let input = $(this).siblings(".quantity-input");
                    let newValue = parseInt(input.val()) + 1;

                    if (newValue <= parseInt(input.attr("max"))) {
                        input.val(newValue).change();
                    }
                });

                $(".decrease-qty").click(function () {
                    let input = $(this).siblings(".quantity-input");
                    let newValue = parseInt(input.val()) - 1;

                    if (newValue >= parseInt(input.attr("min"))) {
                        input.val(newValue).change();
                    }
                });

                $(".quantity-input").on("change", function () {
                    CartModule.updateButtons(this);
                });
            });
        </script>
    }
}